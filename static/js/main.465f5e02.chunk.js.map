{"version":3,"sources":["Spotify-API.js","App.js","index.js"],"names":["SpotifyAPI","token","Object","classCallCheck","this","fetch","headers","Authorization","concat","then","res","json","timeRange","arguments","length","undefined","topArtists","_step","genres","_iterator","_createForOfIteratorHelper","items","s","n","done","_step2","_iterator2","value","genre","err","e","f","convertGenresToPieData","_callee","data","_regeneratorRuntime","wrap","_context","prev","next","push","title","toLocaleUpperCase","color","Math","floor","random","toString","sort","a","b","abrupt","stop","SpotifyInfo","_React$useState3","React","useState","Cookies","get","slicedToArray","_React$useState5","_React$useState6","profileImage","setProfileImage","_React$useState7","_React$useState8","profileName","setProfileName","_React$useState9","_React$useState10","profileURL","setProfileURL","_React$useState11","_React$useState12","shortTermTracks","setShortTermTracks","_React$useState13","_React$useState14","shortTermArtists","setShortTermArtists","_React$useState15","_React$useState16","shortTermGenres","setShortTermGenres","_React$useState17","_React$useState18","mediumTermTracks","setMediumTermTracks","_React$useState19","_React$useState20","mediumTermArtists","setMediumTermArtists","_React$useState21","_React$useState22","mediumTermGenres","setMediumTermGenres","_React$useState23","_React$useState24","longTermTracks","setLongTermTracks","_React$useState25","_React$useState26","longTermArtists","setLongTermArtists","_React$useState27","_React$useState28","longTermGenres","setLongTermGenres","useEffect","api","profileObj","getProfile","images","url","display_name","external_urls","spotify","getTopTracks","getTopArtists","getTopArtistsGenres","react_default","createElement","className","src","alt","href","target","esm","map","track","key","id","onClick","openURI","uri","album","name","artist","style","fontSize","react_minimal_pie_chart_dist","lineWidth","radius","PieChart","defaultProps","segmentsShift","height","width","margin","window","location","App","_React$useState","_React$useState2","setToken","index_modern","clientID","redirectUri","scopes","Scopes","userReadEmail","userReadPrivate","userTopRead","onAccessToken","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.465f5e02.chunk.js","sourcesContent":["class SpotifyAPI {\r\n    constructor(token) {\r\n        this.token = token;\r\n    }\r\n\r\n    getProfile() {\r\n        return fetch(`https://api.spotify.com/v1/me`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.token}`\r\n            }\r\n        }).then(res => res.json());\r\n    }\r\n\r\n    getTopTracks(timeRange = 'short_term') {\r\n        return fetch(`https://api.spotify.com/v1/me/top/tracks?limit=50&time_range=${timeRange}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.token}`\r\n            }\r\n        }).then(res => res.json());\r\n    }\r\n\r\n    getTopArtists(timeRange = 'short_term') {\r\n        return fetch(`https://api.spotify.com/v1/me/top/artists?limit=50&time_range=${timeRange}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.token}`\r\n            }\r\n        }).then(res => res.json());\r\n    }\r\n\r\n    //GET THE GENRES OF EACH ARTIST IN THE TOP ARTISTS AND INCREMENT A COUNT FOR EACH GENRE\r\n    getTopArtistsGenres(topArtists) {\r\n        let genres = {};\r\n\r\n        for (let artist of topArtists.items) {\r\n            let artistGenres = artist.genres;\r\n\r\n            for (let genre of artistGenres) {\r\n                if (genres[genre]) {\r\n                    genres[genre]++;\r\n                } else {\r\n                    genres[genre] = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        return genres;\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\nexport default SpotifyAPI;","import React from 'react'\nimport { SpotifyAuth, Scopes } from 'react-spotify-auth';\nimport 'react-spotify-auth/dist/index.css';\nimport Cookies from 'js-cookie'\nimport SpotifyAPI from './Spotify-API'\nimport './App.css';\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport { PieChart } from 'react-minimal-pie-chart';\n\nfunction App() {\n  \n  const [token, setToken] = React.useState(Cookies.get(\"spotifyAuthToken\"))\n\n  return (\n    <div className=\"App\">\n      {token ? (\n        <SpotifyInfo/>\n        \n      ) : (\n        //SHOW LOGIN \n        <SpotifyAuth\n          clientID='0166a2461c6c4692b5dbb305776488d4'\n          redirectUri='https://jacoba2000.github.io/Spotify-Uncovered/'\n          //redirectUri='http://localhost:3000/'\n          scopes={\n            [\n              Scopes.userReadEmail, \n              Scopes.userReadPrivate,\n              Scopes.userTopRead\n            ]\n          }\n        \n          onAccessToken={(token) => setToken(token)}\n        />\n      )}\n    </div>\n  );\n}\n\nasync function convertGenresToPieData(genres) {\n  //CONVERT GENRES OBJECT TO PIECHART DATA\n  let data = []\n  for (let genre in genres) {\n    data.push({\n      title: genre.toLocaleUpperCase(),\n      value: genres[genre],\n      color: '#' + Math.floor(Math.random() * (256-100) + 100).toString(16) + Math.floor(Math.random() * (256-100) + 100).toString(16) + Math.floor(Math.random() * (256-100) + 100).toString(16)\n    })\n  }\n\n  //SORT GENRES BY VALUE\n  data.sort((a, b) => {\n    return b.value - a.value\n  })\n\n  return data\n}\n\nfunction SpotifyInfo() {\n\n  const [token] = React.useState(Cookies.get(\"spotifyAuthToken\"))\n\n  const [profileImage, setProfileImage] = React.useState('')\n  const [profileName, setProfileName] = React.useState('')\n  const [profileURL, setProfileURL] = React.useState('')\n\n  const [shortTermTracks, setShortTermTracks] = React.useState([])\n  const [shortTermArtists, setShortTermArtists] = React.useState([])\n  const [shortTermGenres, setShortTermGenres] = React.useState([])\n\n  const [mediumTermTracks, setMediumTermTracks] = React.useState([])\n  const [mediumTermArtists, setMediumTermArtists] = React.useState([])\n  const [mediumTermGenres, setMediumTermGenres] = React.useState([])\n    \n  const [longTermTracks, setLongTermTracks] = React.useState([])\n  const [longTermArtists, setLongTermArtists] = React.useState([])\n  const [longTermGenres, setLongTermGenres] = React.useState([])\n\n  //GET SPOTIFY TOP TRACKS FOR CURRENT USER VIA THE GIVEN TOKEN ENSURING ONLY 1 FETCH IS SENT\n  React.useEffect(() => {\n    if(token) {\n      let api = new SpotifyAPI(token)\n\n      let profileObj = api.getProfile()\n\n      let genres = {}\n\n      profileObj.then(res => {\n        setProfileImage(res.images[0].url)\n        setProfileName(res.display_name)\n        setProfileURL(res.external_urls.spotify)\n      })\n\n      //GET SHORT TERM TOP TRACKS AND ARTISTS\n      let shortTermTracksObj = api.getTopTracks('short_term')\n\n      shortTermTracksObj.then(res => {\n        setShortTermTracks(res.items)\n      })\n\n      let shortTermArtistsObj = api.getTopArtists('short_term')\n\n      shortTermArtistsObj.then(res => {\n\n        genres = api.getTopArtistsGenres(res)\n\n        convertGenresToPieData(genres).then(res => {\n          setShortTermGenres(res)\n        })\n\n        setShortTermArtists(res.items)\n      })\n\n      //GET MEDIUM TERM TOP TRACKS AND ARTISTS\n      let mediumTermTracksObj = api.getTopTracks('medium_term')\n\n      mediumTermTracksObj.then(res => {\n        setMediumTermTracks(res.items)\n      })\n\n      let mediumTermArtistsObj = api.getTopArtists('medium_term')\n\n      mediumTermArtistsObj.then(res => {\n        genres = api.getTopArtistsGenres(res)\n\n        convertGenresToPieData(genres).then(res => {\n          setMediumTermGenres(res)\n        })\n\n        setMediumTermArtists(res.items)\n      })\n\n      //GET LONG TERM TOP TRACKS AND ARTISTS\n      let longTermTracksObj = api.getTopTracks('long_term')\n\n      longTermTracksObj.then(res => {\n        setLongTermTracks(res.items)\n      })\n\n      let longTermArtistsObj = api.getTopArtists('long_term')\n\n      longTermArtistsObj.then(res => {\n        genres = api.getTopArtistsGenres(res)\n\n        convertGenresToPieData(genres).then(res => {\n          setLongTermGenres(res)\n        })\n\n        setLongTermArtists(res.items)\n      })\n\n    }\n  }, [token])\n\n  return (\n    <div>\n      <div className=\"profile\">\n        <img className=\"profile-img\" src={profileImage} alt={profileName}/>\n        <p className=\"profile-name\">{profileName}</p>\n        <a className=\"profile-url\"href={profileURL} target=\"_blank\">View Profile on Spotify</a>\n      </div>\n\n      <Tabs>\n        <TabList>\n          <Tab>Last Month</Tab>\n          <Tab>Last 6 Months</Tab>\n          <Tab>All-time</Tab>\n        </TabList>\n\n        {/* SHORT TERM */}\n        <TabPanel>\n          <h2>Top Tracks</h2>\n          <ul className=\"track-list\">\n            {shortTermTracks.map(track => (\n              <li className=\"track-list-item\" key={track.id} onClick={() => openURI(track.uri)}>\n                <div className=\"track-info\">\n                  <img className=\"track-img\" src={track.album.images[0].url} alt={track.name}/>\n                  <p className=\"track-name\">{track.name}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n\n          <h2>Top Artists</h2>\n          <ul className=\"artist-list\">\n            {shortTermArtists.map(artist => (\n              <li className=\"artist-list-item\" key={artist.id} onClick={() => openURI(artist.uri)}>\n                <div className=\"artist-info\">\n\n                  <img className=\"artist-img\" src={artist.images[0].url} alt={artist.name}/>\n\n                  <p className=\"artist-name\">{artist.name}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n\n          <h2>Top Genres</h2>\n          {/* PIECHART THAT SHOWS LABELS FOR EACH GENRE */}\n          <div className=\"piechart-container\">\n            {/* PIECHART KEY */}\n            <div className=\"piechart-key\">\n              {shortTermGenres.map(genre => (\n                <div className=\"piechart-key-item\" key={genre.title}>\n                  <p className=\"piechart-key-title\" style={{color: genre.color, fontSize: '1em'}}>{genre.title}</p>\n             </div>\n              ))}\n            </div>\n\n            <PieChart\n              data={shortTermGenres}\n              lineWidth={50}\n              radius={PieChart.defaultProps.radius - 14}\n              segmentsShift={2}\n              style={{\n                height: '75vw',\n                width: '75vw',\n                margin: '0 auto',\n              }}\n            />\n          </div>\n        </TabPanel>\n        \n        {/* MEDIUM TERM */}\n        <TabPanel>\n          <h2>Top Tracks</h2>\n          <ul className=\"track-list\">\n            {mediumTermTracks.map(track => (\n              <li className=\"track-list-item\" key={track.id} onClick={() => openURI(track.uri)}>\n                <div className=\"track-info\">\n                  <img className=\"track-img\" src={track.album.images[0].url} alt={track.name}/>\n                  <p className=\"track-name\">{track.name}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n\n          <h2>Top Artists</h2>\n          <ul className=\"artist-list\">\n            {mediumTermArtists.map(artist => (\n              <li className=\"artist-list-item\" key={artist.id} onClick={() => openURI(artist.uri)}>\n                <div className=\"artist-info\">\n                  <img className=\"artist-img\" src={artist.images[0].url} alt={artist.name}/>\n                  <p className=\"artist-name\">{artist.name}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n\n          <h2>Top Genres</h2>\n          {/* PIECHART THAT SHOWS LABELS FOR EACH GENRE */}\n          <div className=\"piechart-container\">\n            {/* PIECHART KEY */}\n            <div className=\"piechart-key\">\n              {mediumTermGenres.map(genre => (\n                <div className=\"piechart-key-item\" key={genre.title}>\n                  <p className=\"piechart-key-title\" style={{color: genre.color, fontSize: '1em'}}>{genre.title}</p>\n             </div>\n              ))}\n            </div>\n\n            <PieChart\n              data={mediumTermGenres}\n              lineWidth={50}\n              radius={PieChart.defaultProps.radius - 14}\n              segmentsShift={2}\n              style={{\n                height: '75vw',\n                width: '75vw',\n                margin: '0 auto',\n              }}\n            />\n          </div>\n        </TabPanel>\n        \n        {/* LONG TERM */}\n        <TabPanel>\n          <h2>Top Tracks</h2>\n          <ul className=\"track-list\">\n            {longTermTracks.map(track => (\n              <li className=\"track-list-item\" key={track.id} onClick={() => openURI(track.uri)}>\n                <div className=\"track-info\">\n                  <img className=\"track-img\" src={track.album.images[0].url} alt={track.name}/>\n                  <p className=\"track-name\">{track.name}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n\n          <h2>Top Artists</h2>\n          <ul className=\"artist-list\">\n            {longTermArtists.map(artist => (\n              <li className=\"artist-list-item\" key={artist.id} onClick={() => openURI(artist.uri)}>\n                <div className=\"artist-info\">\n\n                  <img className=\"artist-img\" src={artist.images[0].url} alt={artist.name}/>\n\n                  <p className=\"artist-name\">{artist.name}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n            \n          <h2>Top Genres</h2>\n          {/* PIECHART THAT SHOWS LABELS FOR EACH GENRE */}\n          <div className=\"piechart-container\">\n            {/* PIECHART KEY */}\n            <div className=\"piechart-key\">\n              {longTermGenres.map(genre => (\n                <div className=\"piechart-key-item\" key={genre.title}>\n                  <p className=\"piechart-key-title\" style={{color: genre.color, fontSize: '1em'}}>{genre.title}</p>\n             </div>\n              ))}\n            </div>\n\n            <PieChart\n              data={longTermGenres}\n              lineWidth={50}\n              radius={PieChart.defaultProps.radius - 14}\n              segmentsShift={2}\n              style={{\n                height: '75vw',\n                width: '75vw',\n                margin: '0 auto',\n              }}\n            />\n          </div>\n        </TabPanel>\n\n      </Tabs>\n\n    </div>\n\n  )\n}\n\nfunction openURI(uri) {\n  window.location = uri\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}